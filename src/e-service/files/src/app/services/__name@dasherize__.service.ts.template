import {HttpClient} from '@angular/common/http';
import {Injectable} from '@angular/core';
import {DomSanitizer} from '@angular/platform-browser';
import {BaseGenericEService} from "@app/generics/base-generic-e-service";
import {ILanguageKeys} from '@app/interfaces/i-language-keys';
import {<%= classify(name)%>} from "@app/models/project-fundraising";
import {CastResponseContainer} from "@decorators/cast-response";
import {FactoryService} from "@services/factory.service";
import {DialogService} from '@services/dialog.service';
import {DynamicOptionsService} from '@services/dynamic-options.service';
import {UrlService} from '@services/url.service';
import {<%= classify(name)%>ApproveTaskPopupComponent} from "@modules/<%= underModule %>/popups/<%=dasherize(name)%>-approve-task-popup/<%=dasherize(name)%>-approve-task-popup.component";
@CastResponseContainer({
  $default: {
    model: () => <%= classify(name)%>
  }
})
@Injectable({
  providedIn: 'root'
})
export class <%= classify(name)%>Service extends BaseGenericEService<<%= classify(name)%>> {
  jsonSearchFile: string = '<%= underscore(name)%>_search.json';
  serviceKey: keyof ILanguageKeys = 'menu_<%= underscore(name)%>';
  caseStatusIconMap: Map<number, string> = new Map<number, string>();
  searchColumns: string[] = ['fullSerial', 'subject', 'requestTypeInfo', 'createdOn', 'caseStatus', 'ouInfo'];

  constructor(
    public http: HttpClient,
    public dialog: DialogService,
    public dynamicService: DynamicOptionsService,
    public domSanitizer: DomSanitizer,
    private urlService: UrlService
  ) {
    super();
    FactoryService.registerService('<%= classify(name)%>Service', this)
  }

  _getURLSegment(): string {
    return this.urlService.URLS.<%= urlName%>
  }

  _getModel() {
    return <%= classify(name)%>
  }

  getSearchCriteriaModel<S extends <%= classify(name)%>>(): <%= classify(name)%> {
    return new <%= classify(name)%>()
  }

  getCaseComponentName(): string {
    return '<%= classify(name)%>Component'
  }

  _getUrlService(): UrlService {
    return this.urlService
  }
  approveTask(model: <%= classify(name)%>, action: WFResponseType) {
    return this.dialog.show(<%= classify(name)%>ApproveTaskPopupComponent, {
      model,
      action: action
    });
  }
}
